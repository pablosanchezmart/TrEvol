% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/defineModelsSpecifications.R
\name{defineModelsSpecifications}
\alias{defineModelsSpecifications}
\title{Define \emph{mcmcglmm} (Bayesian Phylogenetic Mixed Models) specifications}
\usage{
defineModelsSpecifications(
  number_iterations = 100,
  burning = 10,
  thinning = 2,
  uniresponse_prior = list(R = list(V = 1, nu = 0.002), G = list(G1 = list(V = 1, nu =
    0.002))),
  biresponse_prior = list(R = list(V = diag(2)/2, nu = 2), G = list(G1 = list(V =
    diag(2)/2, nu = 2))),
  triresponse_prior = list(R = list(V = diag(3)/2, nu = 2), G = list(G1 = list(V =
    diag(3)/2, nu = 2)))
)
}
\arguments{
\item{number_iterations}{(\emph{integer}) Number of iterations of  the MCMCglmm model.}

\item{burning}{(\emph{integer}) Number of burning iterations. This initial iterations will be excluded from when estimating the posterior distribution. It allows achieving convergence.}

\item{thinning}{(\emph{integer}) Number of thinning iterations. Number of iterations that will be discarded after a sampled one. It allows to deal with autocorrelation.}

\item{uniresponse_prior}{(\emph{list}) Parameters for the random effects for uni-response models. Default is set to an inverse-Gamma distribution, which is canonical and considered non-informative.}

\item{biresponse_prior}{(\emph{list}) Parameters for the random effects of bi-response models. Normally, these are the models including two traits. Default is set to an inverse-Gamma distribution, which is canonical and considered non-informative.}

\item{triresponse_prior}{(\emph{list}) Parameters for the random effects of tri-response models. Normally, these are the models including two traits and one environmental variable. Default is set to an inverse-Gamma distribution, which is canonical and considered non-informative.}
}
\value{
List of mcmcglmm model specifications.
}
\description{
Return an object containing the specifications that can be used as in the argument "model_specifications" of the functions
computeVariancePartition, computeCovariancePartition and computeVarianceCovariancePartition.
See "MCMCglmm" R package documentation for further information.
}
